<?php

namespace App\Controller\Admin;

use App\Entity\Quotation;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\MoneyField;
use EasyCorp\Bundle\EasyAdminBundle\Field\NumberField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class QuotationCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Quotation::class;
    }


    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('name', 'nom'),
            TextField::new('reference'),
            TextField::new('payment'),
            TextField::new('designation'),
            NumberField::new('quantity', 'Quantité'),
            AssociationField::new('deadline', 'Délai'),
            // ADDRESSE DE FACTURATION
            // AssociationField::new('billingAddress'),
            AssociationField::new('products'),
            // AssociationField::new('billingAddress'),
            AssociationField::new('client'),
            MoneyField::new('Amount', 'Prix de vente')->hideOnForm()->setCurrency('EUR'),
          /*  TextField::new('address', 'Rue')->onlyOnForms(),
            TextField::new('city', 'Ville')->onlyOnForms(),
            NumberField::new('postalCode', 'Code postal')->onlyOnForms(),
            TextField::new('Country', 'Pays')->onlyOnForms(),*/

            TextEditorField::new('description'),
        ];
    }

    public function createEntity(string $entityFqcn)
    {
        return parent::createEntity($entityFqcn); // TODO: Change the autogenerated stub
    }

}
